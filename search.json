[
  {
    "objectID": "veda-apis.html",
    "href": "veda-apis.html",
    "title": "VEDA Documentation",
    "section": "",
    "text": "The VEDA API source code is currently stored in a private repository: veda-backend, but is based off eoAPI.\nThe browser is based off https://github.com/radiantearth/stac-browser.\n\n\nWe recommend the following tools for working with STAC and VEDA datasets.\n\n\n\nfolium: folium adds Leaflet.js support to python projects for visualizing data in a map.\nholoviz: High-level tools that make it easier to apply Python plotting libraries to your data.\nipyleaflet: Interactive maps in the Jupyter notebook. ipyleaflet is built on ipywidgets allowing for bidirectional communication between front- and backends (learn more: Interactive GIS in Jupyter with ipyleaflet).\n\n\n\n\n\npystac: PySTAC is a library for creating SpatioTemporal Asset Catalogs (STAC) in Python 3.\npystac-client: A Python client for working with STAC Catalogs and APIs.\n\n\n\n\n\nrioxarray: rasterio xarray extension\nstackstac: stackstac.stack turns a STAC collection into a lazy xarray.DataArray, backed by dask.\n\n\n\n\n\n\n\n\n\n\n\nSTAC browser (experimental): delta-staging-stac-browser\nSTAC API (metadata): https://staging-stac.delta-backend.com/docs\nList collections: https://staging-stac.delta-backend.com/collections\nRaster API (tiling): https://staging-raster.delta-backend.com/docs\nSTAC viewer (experimental): https://staging-stac.delta-backend.com/index.html\n\n\n\n\n\nSTAC browser (experimental): delta-dev-stac-browser\nSTAC API (metadata): https://dev-stac.delta-backend.com/docs\nList collections: https://dev-stac.delta-backend.com/collections\nRaster API (tiling): https://dev-raster.delta-backend.com/docs\nSTAC viewer (experimental): https://dev-stac.delta-backend.com/index.html"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "VEDA Documentation",
    "section": "",
    "text": "This website provides documentation and example notebooks for the various APIs, datasets and analytics platforms maintained by NASA VEDA project. The intended audience is anyone who plans to use those backend systems."
  },
  {
    "objectID": "index.html#what-is-veda",
    "href": "index.html#what-is-veda",
    "title": "VEDA Documentation",
    "section": "What is VEDA?",
    "text": "What is VEDA?\nVEDA is NASA’s Visualization, Exploration, and Data Analysis (VEDA) project. It is an open-source science cyberinfrastructure for data processing, visualization, exploration, and geographic information systems (GIS) capabilities.\nLearn more at https://www.earthdata.nasa.gov/esds/veda."
  },
  {
    "objectID": "index.html#what-can-you-do-with-veda",
    "href": "index.html#what-can-you-do-with-veda",
    "title": "VEDA Documentation",
    "section": "What can you do with VEDA?",
    "text": "What can you do with VEDA?\nExplore: Available to anyone, you can visit the VEDA dashboard to explore data and stories developed by NASA scientific community at https://earthdata.nasa.gov/dashboard.\nAnalyze: Coming soon, anyone will be able to explore VEDA datasets and stories using a notebook environment. If you are a scientist affiliated with NASA projects such as EIS and MAAP you should have access to a notebook environment associated with those projects."
  },
  {
    "objectID": "index.html#whats-here",
    "href": "index.html#whats-here",
    "title": "VEDA Documentation",
    "section": "What’s here",
    "text": "What’s here\n\nDocumentation on VEDA datasets and APIs."
  },
  {
    "objectID": "index.html#whats-coming",
    "href": "index.html#whats-coming",
    "title": "VEDA Documentation",
    "section": "What’s coming",
    "text": "What’s coming\n\nDocumentation for scientists on how to get started with the analytics platforms."
  },
  {
    "objectID": "example-notebooks/list-collections.html",
    "href": "example-notebooks/list-collections.html",
    "title": "List all collections",
    "section": "",
    "text": "from pystac_client import Client\n\n\nSTAC_API_URL = 'https://staging-stac.delta-backend.com/'\nclient = Client.open(STAC_API_URL)\n\n\nfor root, subcatalogs, items in client.walk():\n    # subcats represents any catalogs or collections owned by root\n    for cat in subcatalogs:\n        print(cat.id)\n\nnightlights-500m-daily\nsocial-vulnerability-index-household\nnightlights-hd-monthly\ngeoglam\ngrdi-vnl-raster\nsocial-vulnerability-index-housing-nopop\nsocial-vulnerability-index-household-nopop\nsocial-vulnerability-index-socioeconomic\nsocial-vulnerability-index-socioeconomic-nopop\ngrdi-filled-missing-values-count\nOMI_trno2-COG\nsocial-vulnerability-index-overall\nsocial-vulnerability-index-minority-nopop\ngrdi-cdr-raster\nMO_NPP_npp_vgpm\nno2-monthly-diff\nlis-tws-trend\nHLSL30.002\nsocial-vulnerability-index-overall-nopop\ngrdi-v1-raster\nIS2SITMOGR4-cog\nlis-tws-anomaly\nblue-tarp-planetscope\nsocial-vulnerability-index-housing\nblue-tarp-detection\ngrdi-shdi-raster\ngrdi-imr-raster\nhls-l30-002-ej\nno2-monthly\nnightlights-hd-1band\nsocial-vulnerability-index-minority\nnceo_africa_2017\nOMSO2PCA-COG\nHLSS30.002\nhls-s30-002-ej-reprocessed\ngrdi-v1-built\nhls-s30-002-ej\nhls-l30-002-ej-reprocessed\nfacebook_population_density\ngrdi-vnl-slope-raster"
  },
  {
    "objectID": "example-notebooks/index.html",
    "href": "example-notebooks/index.html",
    "title": "VEDA Documentation",
    "section": "",
    "text": "Example Notebooks\nRun the notebooks locally:\npip3 install -r requirements\njupyter notebook"
  }
]