---
title: Scientific Computing
---

VEDA scientific computing services provide scientists the resources they need to develop (interactively) and execute (operationally) algorithms for geospatial data science and scalable computing, and to support open science by giving all users access to sufficient resources and tools to do science and replicate scientific results. This approach includes:

* Identifying and configuring interactive, collaborative science environments (e.g., Jupyter notebooks) for advanced data exploration and prototyping new products
* Providing frameworks for cloud-native simulation modeling and data assimilation
* Improving technologies for dynamic scaling and operationalization of product generation workflows
* Providing managed resources for data analysis in the cloud

![AP Screenshot](images/analytics-platform.png)

## Collaborative and Interactive Data Science with JupyterHub

VEDA promotes the use of JupyterHub environments for interactive data science. JupyterHub enables you to analyze massive archives of Earth science data in the cloud in an interactive environment that alleviates the complexities of managing compute resources (virtual machines, roles and permissions, etc).

Users affiliated with VEDA can get access to a dedicated JupyterHub service, provided in collaboration with [2i2c](https://2i2c.org/): [hub.openveda.cloud](https://hub.openveda.cloud/). Please find instructions for requesting access below.

If you are a scientist affiliated with NASA projects such as [EIS](https://eis.smce.nasa.gov/about.html) and [MAAP](https://ops.maap-project.org), you can also keep using the resources provided by these projects.

Through the use of [open-source technology](https://www.earthdata.nasa.gov/dashboard/about), we make sure our services are interoperable and exchangeable.


## Instructory notebooks

This documentation site provides [Jupyter notebooks](/notebooks/index.qmd) on how to load and analyze Earth data an interactive cloud computing environment.


## Getting access to VEDA's JupyterHub environment {#access}

Please see [Getting Access]().